set ex
set secure
if &t_Co == 8 || $TERM == 'linux'
    colo desert
else
    colo deus
endif
"set bg=dark

"common
set nocp
set ff=unix
set ffs=unix,dos,mac
set enc=utf-8
let &fenc=&enc
let &tenc=&enc
set fencs=utf-8,gb2312,gbk,iso-2022-jp,euc-jp,sjis,ucs-bom,latin1
set ambw=double
"indent
set bs=2
set cin
set si
set sta
set sw=4
set sts=4
"set ts=2
set et
set cino=g0,:0,N-s,(0
"wrap
"set wrap
set sbr=>>\
"let &sbr= '++++
"look
set nu
set ru
set sc
set ve=block
set shm=atI
set lz
"search
set is
set hls
set hid
set acd
set ic
set scs
"folding
set mps+=<:>
set fen
set fdm=syntax
set fdl=100
"status bar
set ls=2
set stl=%<%F%m\ \[%{&ff}:%{&fenc}:%Y%{&bomb?'\:BOM':''}]\ \ \[%{strftime('%Y%m%d\ %a\ %H:%M')}\]\ %=\ Row:%l\/%L\(%p%%)\ Col:%c%V\ %P
"scroll
set so=3
set sm
set cul cuc
"bak
set wb
set nobk
set hi=50
set mouse=a
syn on
set smc=120
set list lcs=tab:..,eol:$
"cmd completion
set wim=list:longest
set wmnu
"ins completion, c-i = tab
set cot=longest,menu
"ino <c-i> <c-x><c-i>
"
filetype plugin indent on
"gui
if has('gui_running')
  set gcr+=a:block-iCursor,i:ver10-iCursor
  set lines=35 columns=120
  set go-=m
  set go-=T
  if has('gui_win32')
    set gfn=Consolas:h11:cANSI
  elseif has('gui_macvim')
    set gfn=Menlo\ Regular:h14
  elseif has('gui_gtk2') || has('gui_gtk3')
    set gfn=Inconsolata\ 12
  endif
endif
"pair
fu! s:closep(c)
  return getline('.')[col('.')-1]==a:c? "\<right>" : a:c
endf
fu! s:closeq(c)
  let line = getline('.')
  let col = col('.')
  return line[col-2]=='\\' ? a:c : (line[col-1]==a:c ? "\<right>" : a:c.a:c."\<esc>i")
endf
ino ( ()<esc>i
ino { {}<esc>i
ino [ []<esc>i
ino ) <c-r>=<sid>closep(')')<cr>
ino } <c-r>=<sid>closep('}')<cr>
ino ] <c-r>=<sid>closep(']')<cr>
ino ' <c-r>=<sid>closeq("'")<cr>
ino " <c-r>=<sid>closeq('"')<cr>
"esc
ino jk <esc>
" Fix paste bug triggered by the above inoremaps
set t_BE=
ino <esc> <nop>
"highlight off
nn <esc><esc> <esc>:nohl<cr><esc>
"leader
"nn <space> <nop>
"let mapleader=' '
"
"header guards
fu! s:mkgd()
  let gd = substitute(toupper(expand('%:t')), "\\.", "_", "g")
  exe 'norm! i#ifndef ' . gd . '_'
  exe 'norm! o#define ' . gd . '_'
  exe 'norm! Go#endif /* ' . gd . '_ */'
  norm! ko
endf
au BufNewFile *.{h,hh,hpp} call s:mkgd()
au BufRead,BufNewFile *.cpp,*,cc,*.c,*.h,*.hh,*.hpp,*.py,*.php,*.rb,*.js,*.node,*.sh,*.vim,*.css 2match Underlined /.\%81v/
"trailing whitespace
fu! s:rmtw()
  if &ft != 'diff'
    let x = line('.')
    let y = col('.')
    sil! %s/\s\+$//e
    call cursor(x,y)
  endif
endf
au BufWritePre * call s:rmtw()
"root
if has('unix') && !has('win32unix')
  cno w!! w !sudo tee > /dev/null %
endif

hi NonText ctermbg=NONE
hi Normal ctermbg=NONE
" change cursor to ibeam when entering insert mode
let &t_SI = "\<esc>[5 q"
let &t_SR = "\<esc>[5 q"
let &t_EI = "\<esc>[2 q"

"vim-plug instead of vundle
"call plug#begin('~/.vim/plugged')
"Plug 'dyng/ctrlsf.vim'
"Plug 'octol/vim-cpp-enhanced-highlight'
"Plug 'Valloric/YouCompleteMe'
"call plug#end()
"let g:ycm_global_ycm_extra_conf = "~/.vim/ycm_extra_conf.py"
"
"ctrlsf
"let g:ctrlsf_context='-C 2'
"nmap <leader><leader> <plug>CtrlSFCCwordPath<cr>
